{"ast":null,"code":"import _classCallCheck from \"C:\\\\Udemy_Projects\\\\Angular\\\\Routing\\\\routing-start\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Udemy_Projects\\\\Angular\\\\Routing\\\\routing-start\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ServersService } from '../servers.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../servers.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction EditServerComponent_h4_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\");\n    i0.ɵɵtext(1, \"You are not allowed to edit\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction EditServerComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 1)(2, \"label\", 2);\n    i0.ɵɵtext(3, \"Server Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 3);\n    i0.ɵɵlistener(\"ngModelChange\", function EditServerComponent_div_1_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.serverName = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n    i0.ɵɵtext(7, \"Server Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"select\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function EditServerComponent_div_1_Template_select_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.serverStatus = $event;\n    });\n    i0.ɵɵelementStart(9, \"option\", 6);\n    i0.ɵɵtext(10, \"Online\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\", 7);\n    i0.ɵɵtext(12, \"Offline\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function EditServerComponent_div_1_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r3);\n      var ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onUpdateServer();\n    });\n    i0.ɵɵtext(14, \"Update Server\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.serverName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.serverStatus);\n  }\n}\n\nexport var EditServerComponent = /*#__PURE__*/(function () {\n  var EditServerComponent = /*#__PURE__*/function () {\n    function EditServerComponent(serversService, route, router) {\n      _classCallCheck(this, EditServerComponent);\n\n      this.serversService = serversService;\n      this.route = route;\n      this.router = router;\n      this.serverName = '';\n      this.serverStatus = '';\n      this.allowEdit = false;\n      this.changesSaved = false;\n    }\n\n    _createClass(EditServerComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        console.log(this.route.snapshot.queryParams);\n        console.log(this.route.snapshot.fragment);\n        this.route.queryParams.subscribe(function (queryparams) {\n          _this.allowEdit = queryparams['allowEdit'] === '1' ? true : false;\n        });\n        this.route.fragment.subscribe();\n        var id = +this.route.snapshot.params['id'];\n        this.server = this.serversService.getServer(id); //Subscribe route params to update idif params chamge\n\n        this.serverName = this.server.name;\n        this.serverStatus = this.server.status;\n      }\n    }, {\n      key: \"onUpdateServer\",\n      value: function onUpdateServer() {\n        this.serversService.updateServer(this.server.id, {\n          name: this.serverName,\n          status: this.serverStatus\n        });\n        this.changesSaved = true; //this.router.navigate(['../'],{relativeTo : this.route})\n      }\n    }, {\n      key: \"canDeactivate\",\n      value: function canDeactivate() {\n        if (!this.allowEdit) {\n          console.log('this.allowEdit');\n          return true;\n        }\n\n        if ((this.serverName !== this.server.name || this.serverStatus !== this.server.status) && !this.changesSaved) {\n          console.log('this.changesSaved)');\n          return confirm('Are you sure you want to discard?');\n        } else {\n          console.log('else');\n          return true;\n        }\n      }\n    }]);\n\n    return EditServerComponent;\n  }();\n\n  EditServerComponent.ɵfac = function EditServerComponent_Factory(t) {\n    return new (t || EditServerComponent)(i0.ɵɵdirectiveInject(i1.ServersService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  EditServerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditServerComponent,\n    selectors: [[\"app-edit-server\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"status\"], [\"id\", \"status\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"online\"], [\"value\", \"offline\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function EditServerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, EditServerComponent_h4_0_Template, 2, 0, \"h4\", 0);\n        i0.ɵɵtemplate(1, EditServerComponent_div_1_Template, 15, 2, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.allowEdit);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.allowEdit);\n      }\n    },\n    directives: [i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i4.SelectControlValueAccessor, i4.NgSelectOption, i4.ɵNgSelectMultipleOption],\n    styles: [\"\"]\n  });\n  return EditServerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}